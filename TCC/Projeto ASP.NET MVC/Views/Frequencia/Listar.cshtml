@using PagedList;
@using PagedList.Mvc;
@using Ouvidoria.Models;
@using Ouvidoria.Repository;
@using ECV.Util;
@{
    ViewBag.Title = "Registro";
    ViewBag.Operacao = "Listar";
}
@model Tuple<IPagedList<Frequencia>, Frequencia, List<RestricaoConsulta>>


@Html.Partial("~/Views/Shared/ViewPageHeader.cshtml")
<div class="panel panel-default">
    <div class="panel-heading">
        <button type="button" class="btn btn-add" onclick="adicionar('Frequencia')">
            <span class="glyphicon glyphicon-plus"></span>Adicionar
        </button>
        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#modalSearch">
            <span class="glyphicon glyphicon-filter"></span>Filtrar
        </button>
    </div>
    @if (Model.Item1.Count > 0)
    {
        <div class="table-responsive">
            <table class="table table-striped table-condensed table-hover ">
                <thead>
                    <tr>
                        <th class="col-md-1">Aluno</th>
                        <th class="col-md-2">Turma</th>
                        <th class="col-md-2">Aluno da Turma</th>
                        <th class="col-md-2">Pertence a Turma</th>
                        <th class="col-md-2">Data Hora Captura</th>
                        <th class="col-md-1"></th>
                    </tr>
                </thead>
                <tbody>
                    @for (var x = 0; x < Model.Item1.Count(); x++)
                    {
                    <tr>
                        <td>@Model.Item1[x].Aluno.Pessoa.Nome</td>
                        <td>@Model.Item1[x].Aula.Turma.Descricao</td>
                        <td>@Model.Item1[x].Aluno.Turma.Descricao</td>
                        <td>@Html.CheckBox("[" + x + "].alunoDaSala", Model.Item1[x].alunoDaSala ?? false, new { onclick = "return false;" })</td>
                        <td>@String.Format("{0:dd/MM/yyyy HH:mm}", Model.Item1[x].DataEHoraCaptura)</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="alterar('@Model.Item1[x].Id','Frequencia','frequencia');">
                                <span class="glyphicon glyphicon-pencil"></span>Alterar
                            </button>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    @if (Model.Item1.Count == 0)
    {
        <p class="msg-sem-resultado">Nenhuma frequência encontrada</p>
    }
    @if (Model.Item1.HasNextPage || Model.Item1.HasPreviousPage)
    {
        <div class="text-center">
            @Html.PagedListPager(Model.Item1, (page) => Url.Action("Listar",
                                                                        new RouteValueDictionary
                                                    {   { "page", page
    },
                { "Aluno.Id", Model.Item2 != null && Model.Item2.Aluno != null ? Model.Item2.Aluno.Id : null },
                { "Aluno.alunoDaSala", Model.Item2 != null && Model.Item2.alunoDaSala != null ? Model.Item2.alunoDaSala: null },
                { "Aula.Turma.Id", Model.Item2 != null && Model.Item2.Aluno != null &&  Model.Item2.Aluno.Turma != null? Model.Item2.Aluno.Turma.Id : null },
                { "Aula.DataEHoraInicio", Model.Item2 != null && Model.Item2.Aula != null ? Model.Item2.Aula.DataEHoraInicio : null },
                { "restricoes[0].TipoRestricaoConsulta", Model.Item3 != null && Model.Item3[0].TipoRestricaoConsulta != null ? Model.Item3[0].TipoRestricaoConsulta : null },
                { "restricoes[0].Nome", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[0].TipoRestricaoConsulta != null ? "DataFinal" : null },
                { "restricoes[0].DataFinal", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[0].DataFinal != null ? Model.Item3[0].DataFinal : null },
                { "Aula.DataEHoraFinal", Model.Item2 != null && Model.Item2.Aula != null ? Model.Item2.Aula.DataEHoraFinal : null },
                { "restricoes[1].TipoRestricaoConsulta", Model.Item3 != null && Model.Item3[1].TipoRestricaoConsulta != null ? Model.Item3[0].TipoRestricaoConsulta : null },
                { "restricoes[1].Nome", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[1].TipoRestricaoConsulta != null ? "DataFinal" : null },
                { "restricoes[1].DataFinal", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[1].DataFinal != null ? Model.Item3[0].DataFinal : null }

                                                    }), PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
    }
</div>

<div id="modalSearch" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h1 style="text-align: center" class="modal-title">
                    Busca de Registro
                </h1>
                <button type="button" class="close" data-dismiss="modal" title="Fechar busca">
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/Frequencia/Listar" id="myForm" method="post" class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Item2.Aluno, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownList("Aluno.Id",
                                                                                 new SelectList(AlunoRepository.Instance.GetDropDownList(), "Id", "Pessoa.Nome", Model != null && Model.Item2.Aluno != null ? Model.Item2.Aluno.Id : null), new { @class = "form-control", })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Item2.Aluno.Turma, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-6">
                            @Html.DropDownList("Aula.Turma.Id",
                                                                  new SelectList(TurmaRepository.Instance.GetDropDownList(), "Id", "Descricao", Model != null && Model.Item2.Aluno != null && Model.Item2.Aluno.Turma != null ? Model.Item2.Aluno.Turma.Id : null), new { @class = "form-control", })
                        </div>
                    </div>
                    @*<div class="form-group">
                        @Html.Label("Aluno da Turma", new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-6">
                            @Html.CheckBox("alunoDaSala", Model != null && Model.Item2.Aluno != null && Model.Item2.alunoDaSala != null ? Model.Item2.alunoDaSala : true)
                        </div>
                    </div>*@
                    <div class="form-group">
                        @Html.LabelFor(x => x.Item2.Aula.DataEHoraInicio, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-7">
                            @Html.TextBox("Aula.DataEHoraInicio", Model.Item2.Aula != null ? Model.Item2.Aula.DataEHoraInicio : null,
                                                                 new { @class = "form-control input-medio", @Value = String.Format("{0:dd/MM/yyyy}", Model.Item2.Aula != null ? Model.Item2.Aula.DataEHoraInicio : null) })
                            @Html.TextBox("restricoes[0].DataFinal", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[0].DataFinal != null ? Model.Item3[0].DataFinal : null,
                                                                 new { @class = "form-control input-medio", @Value = String.Format("{0:dd/MM/yyyy}", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[0].DataFinal != null ? Model.Item3[0].DataFinal : null) })
                            @Html.Hidden("restricoes[0].Nome", "DataEHoraInicio")
                            @Html.DropDownList("restricoes[0].TipoRestricaoConsulta",
                                                                                                             GenericFunctions.InsertEmptyRow(new
                                                                                                                     SelectList(from TipoRestricaoConsulta e in Enum.GetValues(typeof(TipoRestricaoConsulta))
                                                                                                                                select new { Id = e, Name = GenericFunctions.GetEnumDescription(e) }, "Id", "Name")),
                                                                                                             new { @class = "form-control input-medio" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Item2.Aula.DataEHoraFinal, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-7">
                            @Html.TextBox("Aula.DataEHoraFinal", Model.Item2.Aula != null ? Model.Item2.Aula.DataEHoraFinal : null,
                                                                 new { @class = "form-control input-medio", @Value = String.Format("{0:dd/MM/yyyy}", Model.Item2.Aula != null ? Model.Item2.Aula.DataEHoraFinal : null) })
                            @Html.TextBox("restricoes[1].DataFinal", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[1].DataFinal != null ? Model.Item3[1].DataFinal : null,
                                                                 new { @class = "form-control input-medio", @Value = String.Format("{0:dd/MM/yyyy}", Model.Item3 != null && Model.Item3.Count > 0 && Model.Item3[1].DataFinal != null ? Model.Item3[1].DataFinal : null) })
                            @Html.Hidden("restricoes[1].Nome", "DataEHoraFinal")
                            @Html.DropDownList("restricoes[1].TipoRestricaoConsulta",
                                                                                                             GenericFunctions.InsertEmptyRow(new
                                                                                                                     SelectList(from TipoRestricaoConsulta e in Enum.GetValues(typeof(TipoRestricaoConsulta))
                                                                                                                                select new { Id = e, Name = GenericFunctions.GetEnumDescription(e) }, "Id", "Name")),
                                                                                                             new { @class = "form-control input-medio" })

                        </div>
                        <button type="submit" class="btn btn-success">
                            <span class="glyphicon glyphicon-search"></span>Buscar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    function posLoad() {
        var arrayCamposData = ["Aula_DataEHoraInicio", "Aula_DataEHoraFinal", "restricoes_0__DataFinal", "restricoes_1__DataFinal"];
        inserirMascaraDatas(arrayCamposData);
    }
</script>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/Util.js")
}
